version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@0.0.4

workflows:
  build_test_deploy:
    jobs:
      - build_test
      # - docker_hub_build_push_image:
      #     requires:
      #       - build_test
      - aws-ecr/build_and_push_image:
          region: us-east-1
          account-url: ${AWS_ECR_URL}
          repo: ${CIRCLE_PROJECT_REPONAME}
          tag: ${CIRCLE_BUILD_NUM}
          requires:
            - build_test
jobs:
  build_test:
    docker:
      - image: circleci/python:2.7.14
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
                chmod +x /bin/hadolint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint  
  # docker_hub_build_push_image:
  #   docker:
  #     - image: circleci/python:2.7.14
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: false
  #     - run:
  #         name: Build and push Docker image to Docker Hub
  #         command: |
  #           echo 'export TAG=0.1.${CIRCLE_BUILD_NUM}' >> ${BASH_ENV}
  #           echo 'export IMAGE_NAME=${CIRCLE_PROJECT_REPONAME}' >> ${BASH_ENV}
  #           source ${BASH_ENV}
  #           docker build -t ${DOCKER_LOGIN}/${IMAGE_NAME} -t ${DOCKER_LOGIN}/${IMAGE_NAME}:${TAG} .
  #           echo ${DOCKER_PWD} | docker login -u ${DOCKER_LOGIN} --password-stdin
  #           docker push ${DOCKER_LOGIN}/${IMAGE_NAME}